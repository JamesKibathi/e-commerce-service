apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-app
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: ecommerce-app
  template:
    metadata:
      labels:
        app: ecommerce-app
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command: 
            - 'sh'
            - '-c'
            - |
              echo "Checking PostgreSQL connection..."
              until nc -z -v -w5 postgres-service 5432; do 
                echo "Waiting for PostgreSQL to be ready..."; 
                sleep 5; 
              done
              echo "PostgreSQL is ready!"    
      containers:
        - name: ecommerce-app
          image: ${{ secrets.DOCKER_USERNAME }}/e-commerce-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: django-config
            - secretRef:
                name: django-secrets
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
          readinessProbe:
            httpGet:
              path: /api/v1/health/
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/v1/health/
              port: 8000
            initialDelaySeconds: 45
            periodSeconds: 20
            failureThreshold: 5